"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2483],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2197:(e,t,n)=>{n.r(t),n.d(t,{default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={title:"Removal of Pattern::prepare()",author:"Daniel Wilkowski"},p={permalink:"/blog/2020/09/11/pattern-prepared",source:"@site/blog/2020-09-11-pattern-prepared.md",title:"Removal of Pattern::prepare()",description:"Update",date:"2020-09-11T00:00:00.000Z",formattedDate:"September 11, 2020",tags:[],readingTime:1.125,truncated:!1,prevItem:{title:"Release 0.9.10",permalink:"/blog/2020/09/22/release-0.9.10"},nextItem:{title:"PHP Quiz for you!",permalink:"/blog/2020/09/10/quiz"}},s=[{value:"Update",id:"update",children:[{value:"Rationale",id:"rationale",children:[]},{value:"The solution",id:"the-solution",children:[]}]}],c={toc:s},u="wrapper";function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"update"},"Update"),(0,o.kt)("p",null,"In T-Regx 0.9.10, we decided to remove ",(0,o.kt)("inlineCode",{parentName:"p"},"Pattern::prepare()")," from T-Regx. "),(0,o.kt)("h3",{id:"rationale"},"Rationale"),(0,o.kt)("p",null,"Originally, the idea behind this function was quite simple.\nWe wanted to enable quick and readable parameter binding:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"Pattern::prepare(['^http://', [$domain], '/index\\.php'])->test($link);\n")),(0,o.kt)("p",null,"Fairly easy, at the first glance."),(0,o.kt)("p",null,"Its messyness becomes visible, when regular expressions become few and short, and texts\nare multiple and long, sometimes with alteration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"Pattern::prepare([[[$http, $https]], '://', [$domain]])->test($link);\n// vs.\nPattern::prepare([[[$http, $https], '://', $domain]])->test($link);\n")),(0,o.kt)("p",null,"You can see, the outer layer array combined with the ",(0,o.kt)("inlineCode",{parentName:"p"},"[$domain]")," array and array for schema\nbecomes quite hard to read. Additionally, because of alteration, it becomes even more unreadable!\nIt was very easy to misread the parameter array with alteration array, or even regular regex with text."),(0,o.kt)("h3",{id:"the-solution"},"The solution"),(0,o.kt)("p",null,"So at first, we decided to remove it from the library, but then, because of one of the users\ncomment in GitHub issues, we decided that perhaps it would be better not to remove the method,\nbut fix it."),(0,o.kt)("p",null,"In this case, fixing it would be disallowing such confusing constructs as alteration in prepared patterns.\nSo we decided to bring back ",(0,o.kt)("inlineCode",{parentName:"p"},"Pattern::prepare()"),", but remove alteration so the messy queries won't appear\nin the source code."),(0,o.kt)("p",null,"Alteration is still available for ",(0,o.kt)("inlineCode",{parentName:"p"},"Pattern:inject()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Pattern::bind()"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"Pattern::inject('@://@', [[$http, $https], $domain])->test($link);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"Pattern::bind('@scheme://@domain', ['scheme' => [$http, $https], 'domain' => $domain])->test($link);\n")))}d.isMDXComponent=!0}}]);