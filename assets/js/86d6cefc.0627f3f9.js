"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3297],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},462:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={title:"Support for PHP 5.3",author:"Daniel Wilkowski",authorFBID:0x5af34da0d14b},p={permalink:"/blog/2018/03/03/php-5.3-support",source:"@site/blog/2018-03-03-php-5.3-support.md",title:"Support for PHP 5.3",description:"Hello there! Another update, this time there's more to it - much has changed.",date:"2018-03-03T00:00:00.000Z",formattedDate:"March 3, 2018",tags:[],readingTime:1.04,truncated:!0,prevItem:{title:"Capturing groups update",permalink:"/blog/2018/09/01/groups"},nextItem:{title:"What's new, new, new!",permalink:"/blog/2017/12/30/delimiters"}},s=[],c={toc:s};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Hello there! Another update, this time there's more to it - much has changed."),(0,o.kt)("p",null,"Here's a quick list:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ReadMe.md is now more throughout"),(0,o.kt)("li",{parentName:"ul"},"CleanRegex runs on ",(0,o.kt)("a",{parentName:"li",href:"https://travis-ci.org/T-Regx/T-Regx"},"Travis")," and ",(0,o.kt)("a",{parentName:"li",href:"https://coveralls.io/github/T-Regx/T-Regx?branch=master"},"Coveralls")),(0,o.kt)("li",{parentName:"ul"},"The library can now be required using ",(0,o.kt)("a",{href:"https://packagist.org/packages/rawr/t-regx",target:"_blank"},"Composer")),(0,o.kt)("li",{parentName:"ul"},"CleanRegex supports ",(0,o.kt)("inlineCode",{parentName:"li"},"PHP 5.3")),(0,o.kt)("li",{parentName:"ul"},"Handling compile pattern exceptions and runtime pattern exceptions"),(0,o.kt)("li",{parentName:"ul"},"Passing callbacks with detailed object parameters (",(0,o.kt)("inlineCode",{parentName:"li"},"Match")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"ReplaceMatch"),")."),(0,o.kt)("li",{parentName:"ul"},"Add a facade ",(0,o.kt)("inlineCode",{parentName:"li"},"Pattern::of()"))),(0,o.kt)("p",null,"In addition, I'd like to give a quick thanks to Bartek - my friend currently working at Thulium - for a nice suggestion :)"),(0,o.kt)("p",null,"I plan on supporting older versions of PHP by maintaining two branches: ",(0,o.kt)("inlineCode",{parentName:"p"},"master")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"master-php5.3"),". I will develop\nCleanRegex on ",(0,o.kt)("inlineCode",{parentName:"p"},"master")," with PHP 7.1, and with each release, I will merge ",(0,o.kt)("inlineCode",{parentName:"p"},"master")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"master-php5.3")," and remove any\nPHP 5.3 incompatibilities (type hints, scalar arguments, etc.)."),(0,o.kt)("p",null,"I will not remove other incompatibilities, like missing constants, nonexistent methods, etc. because code on ",(0,o.kt)("inlineCode",{parentName:"p"},"master"),"\nwill be developed not to relay on those that much. I will also write unit tests for breaking PHP changes. Some of them\nwill be skipped for PHP 7.1+, and some for PHP <7.1. "),(0,o.kt)("p",null,"PS: Just letting you know that I plan on investing more time in maintaining CleanRegex now :)"))}u.isMDXComponent=!0}}]);