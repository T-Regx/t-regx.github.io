"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4806],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(a),h=n,d=u["".concat(l,".").concat(h)]||u[h]||m[h]||i;return a?r.createElement(d,o(o({ref:t},s),{},{components:a})):r.createElement(d,o({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},92:(e,t,a)=>{a.d(t,{x:()=>l});var r=a(7294),n=a(5558);const i="code_JkvM",o=function(e){var t=e.children,a=e.language;return r.createElement("div",{className:i},r.createElement(n.Z,{className:"language-"+(a||"php")},function(e){if("string"==typeof e)return e;if(!Array.isArray(e))throw console.log(this.props.children),"Unexpected child of <Code>";if(e.every((function(e){return"string"==typeof e})))return e.join("")}(t)))};const c="result_6Tn1",l=function(e){var t=e.text,a=e.children;return r.createElement("div",{className:c},r.createElement(o,{language:t?"text":"php"},a))}},7601:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=a(92),c=["components"],l={id:"match",title:"Match a subject"},p={unversionedId:"match",id:"match",isDocsHomePage:!1,title:"Match a subject",description:"Using pattern()->match() you can:",source:"@site/../docs/match.mdx",sourceDirName:".",slug:"/match",permalink:"/docs/match",version:"current",lastUpdatedAt:1665499037,formattedLastUpdatedAt:"10/11/2022",frontMatter:{id:"match",title:"Match a subject"},sidebar:"docs",previous:{title:"Summary of preg methods",permalink:"/docs/introduction-preg"},next:{title:"First occurrence",permalink:"/docs/match-first"}},s=[{value:"Test a subject",id:"test-a-subject",children:[]},{value:"Retrieve the first match",id:"retrieve-the-first-match",children:[]},{value:"Retrieve multiple matches",id:"retrieve-multiple-matches",children:[]}],m={toc:s};function u(e){var t=e.components,a=(0,n.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"pattern()->match()")," you can:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Test a subject against a pattern: ",(0,i.kt)("a",{parentName:"li",href:"#test-a-subject"},(0,i.kt)("inlineCode",{parentName:"a"},"test()")),"/",(0,i.kt)("a",{parentName:"li",href:"#test-a-subject"},(0,i.kt)("inlineCode",{parentName:"a"},"fails()"))),(0,i.kt)("li",{parentName:"ul"},"Retrieve matches from the subject: ",(0,i.kt)("a",{parentName:"li",href:"#one"},(0,i.kt)("inlineCode",{parentName:"a"},"first()")),"/",(0,i.kt)("a",{parentName:"li",href:"#many"},(0,i.kt)("inlineCode",{parentName:"a"},"all()")),"/",(0,i.kt)("a",{parentName:"li",href:"#many"},(0,i.kt)("inlineCode",{parentName:"a"},"only()"))),(0,i.kt)("li",{parentName:"ul"},"Get capturing groups from matches: ",(0,i.kt)("a",{parentName:"li",href:"/docs/match-details"},(0,i.kt)("inlineCode",{parentName:"a"},"Detail.get()")),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/match-details"},(0,i.kt)("inlineCode",{parentName:"a"},"Detail.group()"))),(0,i.kt)("li",{parentName:"ul"},"Try functional approach: ",(0,i.kt)("a",{parentName:"li",href:"/docs/match-for-each"},(0,i.kt)("inlineCode",{parentName:"a"},"forEach()")),"/",(0,i.kt)("a",{parentName:"li",href:"/docs/match-map"},(0,i.kt)("inlineCode",{parentName:"a"},"map()")),"/",(0,i.kt)("a",{parentName:"li",href:"/docs/match-flat-map"},(0,i.kt)("inlineCode",{parentName:"a"},"flatMap()")))),(0,i.kt)("h2",{id:"test-a-subject"},"Test a subject"),(0,i.kt)("p",null,"If you only need to check whether a pattern matches a subject, use:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"pattern('[0-9]+')->test(\"I'm 19 years old\");\n")),(0,i.kt)("p",null,"...or to check whether it doesn't:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"pattern('[0-9]{3}')->fails(\"I'm 19 years old\");\n")),(0,i.kt)("p",null,"Of course ",(0,i.kt)("inlineCode",{parentName:"p"},"pattern()->match()")," throws an exception if the pattern is invalid (or in case of any other error)."),(0,i.kt)("h2",{id:"retrieve-the-first-match"},"Retrieve the first match"),(0,i.kt)("p",null,"To get the first occurrence of a matched pattern, call ",(0,i.kt)("a",{parentName:"p",href:"#one"},(0,i.kt)("inlineCode",{parentName:"a"},"first()")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"pattern('[0-9]+')->search(\"I'm 19 years old. I was born in 1999\")->first();\n")),(0,i.kt)(o.x,{mdxType:"Result"},"'19'"),(0,i.kt)("p",null,"Read on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/match-first"},"next page")," to learn more about ",(0,i.kt)("a",{parentName:"p",href:"#one"},(0,i.kt)("inlineCode",{parentName:"a"},"first()")),"."),(0,i.kt)("h2",{id:"retrieve-multiple-matches"},"Retrieve multiple matches"),(0,i.kt)("p",null,"You can easily retrieve matched occurrences of a pattern in your subject."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"pattern('[0-9]+')->search(\"I'm 19. I was born in 1999, on May 12\")->all();\n")),(0,i.kt)(o.x,{mdxType:"Result"},"['19', '1999', '12']"),(0,i.kt)("p",null,"You can limit your matches with ",(0,i.kt)("inlineCode",{parentName:"p"},"only(int)"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"pattern('[0-9]+')->search(\"I'm 19. I was born in 1999, on May 12\")->only(2);\n")),(0,i.kt)(o.x,{mdxType:"Result"},"['19', '1999']"))}u.isMDXComponent=!0}}]);