"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9181],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,f=u["".concat(p,".").concat(d)]||u[d]||s[d]||o;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7475:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={title:"What's new, new, new! Part 2",author:"Daniel Wilkowski",authorFBID:0x5af34da0d14b},p={permalink:"/blog/2017/12/30/safe-regex",source:"@site/blog/2017-12-30-safe-regex.md",title:"What's new, new, new! Part 2",description:"I've separated the library into CleanRegex and SafeRegex. The SafeRegex is an exact copy of all preg_*() methods",date:"2017-12-30T00:00:00.000Z",formattedDate:"December 30, 2017",tags:[],readingTime:.895,truncated:!0,prevItem:{title:"What's new, new, new!",permalink:"/blog/2017/12/30/delimiters"},nextItem:{title:"Back on track!",permalink:"/blog/2017/11/10/back-on-track"}},c=[],m={toc:c},u="wrapper";function s(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"I've separated the library into ",(0,o.kt)("inlineCode",{parentName:"p"},"CleanRegex")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"SafeRegex"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"SafeRegex")," is an exact copy of all ",(0,o.kt)("inlineCode",{parentName:"p"},"preg_*()")," methods\n(like ",(0,o.kt)("inlineCode",{parentName:"p"},"preg_match()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"preg_replace()"),"). They're used like this:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"preg_match()")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"preg::match()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"preg_replace()")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"preg::replace()"))),(0,o.kt)("p",null,"I didn't want to use namespaces (like ",(0,o.kt)("inlineCode",{parentName:"p"},"\\SafeRegex\\preg_match"),") because that would\nmean the programmers reading the code would have to check the imported namespaces ",(0,o.kt)("strong",{parentName:"p"},"every time")," they look at the code.\nWith double colon ",(0,o.kt)("inlineCode",{parentName:"p"},"::")," it's obvious. Read on, for more details."))}s.isMDXComponent=!0}}]);