"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4806],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),s=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return a?r.createElement(h,o(o({ref:t},p),{},{components:a})):r.createElement(h,o({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1755:(e,t,a)=>{a.d(t,{O2:()=>f,x4:()=>b});var r=a(7294),n=a(944),i=a(6010);const o="tabItem_vU9c",l="tabItemActive_cw6a";var c=37,s=39;const p=function(e){var t=e.lazy,a=e.block,p=e.defaultValue,m=e.values,u=e.groupId,d=e.className,h=(0,n.Z)(),f=h.tabGroupChoices,v=h.setTabGroupChoices,y=(0,r.useState)(p),b=y[0],k=y[1],g=r.Children.toArray(e.children),N=[];if(null!=u){var x=f[u];null!=x&&x!==b&&m.some((function(e){return e.value===x}))&&k(x)}var O=function(e){var t=e.currentTarget,a=N.indexOf(t),r=m[a].value;k(r),null!=u&&(v(u,r),setTimeout((function(){var e,a,r,n,i,o,c,s;(e=t.getBoundingClientRect(),a=e.top,r=e.left,n=e.bottom,i=e.right,o=window,c=o.innerHeight,s=o.innerWidth,a>=0&&i<=s&&n<=c&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},w=function(e){var t,a;switch(e.keyCode){case s:var r=N.indexOf(e.target)+1;a=N[r]||N[0];break;case c:var n=N.indexOf(e.target)-1;a=N[n]||N[N.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},d)},m.map((function(e){var t=e.value,a=e.label;return r.createElement("li",{role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,className:(0,i.Z)("tabs__item",o,{"tabs__item--active":b===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:w,onFocus:O,onClick:O},a)}))),t?(0,r.cloneElement)(g.filter((function(e){return e.props.value===b}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==b})}))))};const m=function(e){var t=e.children,a=e.hidden,n=e.className;return r.createElement("div",{role:"tabpanel",hidden:a,className:n},t)};var u=a(5558);const d="code_JkvM",h=function(e){var t=e.children,a=e.language;return r.createElement("div",{className:d},r.createElement(u.Z,{className:"language-"+(a||"php")},function(e){if("string"==typeof e)return e;if(!Array.isArray(e))throw console.log(this.props.children),"Unexpected child of <Code>";if(e.every((function(e){return"string"==typeof e})))return e.join("")}(t)))};const f=function(e){var t=e.tregx,a=e.php;return r.createElement(p,{defaultValue:"t-regx",values:v(t,a)},t&&r.createElement(m,{value:"t-regx"},r.createElement(h,null,t)),a&&r.createElement(m,{value:"php"},r.createElement(h,null,a)))};function v(e,t){return[e?{label:"T-Regx",value:"t-regx"}:{},t?{label:"PHP",value:"php"}:{}].filter((function(e){return e.value}))}const y="result_6Tn1",b=function(e){var t=e.text,a=e.children;return r.createElement("div",{className:y},r.createElement(h,{language:t?"text":"php"},a))}},7601:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=a(1755),l=["components"],c={id:"match",title:"Match a subject"},s={unversionedId:"match",id:"match",isDocsHomePage:!1,title:"Match a subject",description:"Using pattern()->match() you can:",source:"@site/../docs/match.mdx",sourceDirName:".",slug:"/match",permalink:"/docs/match",version:"current",lastUpdatedAt:1663931802,formattedLastUpdatedAt:"9/23/2022",frontMatter:{id:"match",title:"Match a subject"},sidebar:"docs",previous:{title:"Migrate to T-Regx",permalink:"/docs/introduction-clean"},next:{title:"First occurrence",permalink:"/docs/match-first"}},p=[{value:"Test a subject",id:"test-a-subject",children:[]},{value:"Retrieve the first match",id:"retrieve-the-first-match",children:[]},{value:"Retrieve multiple matches",id:"retrieve-multiple-matches",children:[]}],m={toc:p};function u(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"pattern()->match()")," you can:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Test a subject against a pattern: ",(0,i.kt)("a",{parentName:"li",href:"#test-a-subject"},(0,i.kt)("inlineCode",{parentName:"a"},"test()")),"/",(0,i.kt)("a",{parentName:"li",href:"#test-a-subject"},(0,i.kt)("inlineCode",{parentName:"a"},"fails()"))),(0,i.kt)("li",{parentName:"ul"},"Retrieve matches from the subject: ",(0,i.kt)("a",{parentName:"li",href:"#one"},(0,i.kt)("inlineCode",{parentName:"a"},"first()")),"/",(0,i.kt)("a",{parentName:"li",href:"#many"},(0,i.kt)("inlineCode",{parentName:"a"},"all()")),"/",(0,i.kt)("a",{parentName:"li",href:"#many"},(0,i.kt)("inlineCode",{parentName:"a"},"only()"))),(0,i.kt)("li",{parentName:"ul"},"Get capturing groups from matches: ",(0,i.kt)("a",{parentName:"li",href:"/docs/match-details"},(0,i.kt)("inlineCode",{parentName:"a"},"Detail.get()")),", ",(0,i.kt)("a",{parentName:"li",href:"/docs/match-details"},(0,i.kt)("inlineCode",{parentName:"a"},"Detail.group()"))),(0,i.kt)("li",{parentName:"ul"},"Try functional approach: ",(0,i.kt)("a",{parentName:"li",href:"/docs/match-for-each"},(0,i.kt)("inlineCode",{parentName:"a"},"forEach()")),"/",(0,i.kt)("a",{parentName:"li",href:"/docs/match-map"},(0,i.kt)("inlineCode",{parentName:"a"},"map()")),"/",(0,i.kt)("a",{parentName:"li",href:"/docs/match-flat-map"},(0,i.kt)("inlineCode",{parentName:"a"},"flatMap()")))),(0,i.kt)("h2",{id:"test-a-subject"},"Test a subject"),(0,i.kt)("p",null,"If you only need to check whether a pattern matches a subject, use:"),(0,i.kt)(o.O2,{tregx:"pattern('[0-9]+')->test(\"I'm 19 years old\");",php:"preg::match('/[0-9]+/', \"I'm 19 years old\") > 0;",mdxType:"CodeTabs"}),(0,i.kt)("p",null,"...or to check whether it doesn't:"),(0,i.kt)(o.O2,{tregx:"pattern('[0-9]{3}')->fails(\"I'm 19 years old\");",php:"preg::match('/[0-9]{3}/', \"I'm 19 years old\") === 0;",mdxType:"CodeTabs"}),(0,i.kt)("p",null,"Of course ",(0,i.kt)("inlineCode",{parentName:"p"},"pattern()->match()")," throws an exception if the pattern is invalid (or in case of any other error)."),(0,i.kt)("h2",{id:"retrieve-the-first-match"},"Retrieve the first match"),(0,i.kt)("p",null,"To get the first occurrence of a matched pattern, call ",(0,i.kt)("a",{parentName:"p",href:"#one"},(0,i.kt)("inlineCode",{parentName:"a"},"first()")),"."),(0,i.kt)(o.O2,{tregx:"pattern('[0-9]+')->search(\"I'm 19 years old. I was born in 1999\")->first();",php:"if (preg::match('/[0-9]+/', \"I'm 19 years old. I was born in 1999\", $match)) {\n    return $match[0];\n}\nthrow new SubjectNotMatchedException();",mdxType:"CodeTabs"}),(0,i.kt)(o.x4,{mdxType:"Result"},"'19'"),(0,i.kt)("p",null,"Read on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/match-first"},"next page")," to learn more about ",(0,i.kt)("a",{parentName:"p",href:"#one"},(0,i.kt)("inlineCode",{parentName:"a"},"first()")),"."),(0,i.kt)("h2",{id:"retrieve-multiple-matches"},"Retrieve multiple matches"),(0,i.kt)("p",null,"You can easily retrieve matched occurrences of a pattern in your subject."),(0,i.kt)(o.O2,{tregx:"pattern('[0-9]+')->search(\"I'm 19. I was born in 1999, on May 12\")->all();",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn $matches[0];",mdxType:"CodeTabs"}),(0,i.kt)(o.x4,{mdxType:"Result"},"['19', '1999', '12']"),(0,i.kt)("p",null,"You can limit your matches with ",(0,i.kt)("inlineCode",{parentName:"p"},"only(int)"),"."),(0,i.kt)(o.O2,{tregx:"pattern('[0-9]+')->search(\"I'm 19. I was born in 1999, on May 12\")->only(2);",php:"preg::match_all('/[0-9]+/', \"I'm 19. I was born in 1999, on May 12\", $matches);\nreturn array_slice($matches[0], 0, 2);",mdxType:"CodeTabs"}),(0,i.kt)(o.x4,{mdxType:"Result"},"['19', '1999']"))}u.isMDXComponent=!0}}]);