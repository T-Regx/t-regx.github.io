"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[120],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),i=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=i(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=i(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||s[d]||o;return n?r.createElement(f,c(c({ref:t},l),{},{components:n})):r.createElement(f,c({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u.mdxType="string"==typeof e?e:a,c[1]=u;for(var i=2;i<o;i++)c[i]=n[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92:(e,t,n)=>{n.d(t,{x:()=>p});var r=n(7294),a=n(5558);const o="code_JkvM",c=function(e){var t=e.children,n=e.language;return r.createElement("div",{className:o},r.createElement(a.Z,{className:"language-"+(n||"php")},function(e){if("string"==typeof e)return e;if(!Array.isArray(e))throw console.log(this.props.children),"Unexpected child of <Code>";if(e.every((function(e){return"string"==typeof e})))return e.join("")}(t)))};const u="result_6Tn1",p=function(e){var t=e.text,n=e.children;return r.createElement("div",{className:u},r.createElement(c,{language:t?"text":"php"},n))}},3169:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m,frontMatter:()=>p,metadata:()=>i,toc:()=>l});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=n(92),u=["components"],p={id:"count",title:"Count occurrences"},i={unversionedId:"count",id:"count",isDocsHomePage:!1,title:"Count occurrences",description:"Sometimes, you might stumble upon a situation where an amount of occurrences is needed, but not the occurrences",source:"@site/../docs/count.mdx",sourceDirName:".",slug:"/count",permalink:"/docs/count",version:"current",lastUpdatedAt:1665527810,formattedLastUpdatedAt:"10/11/2022",frontMatter:{id:"count",title:"Count occurrences"},sidebar:"docs",previous:{title:"Map with keys (Flat map)",permalink:"/docs/match-flat-map"},next:{title:"Match details",permalink:"/docs/match-details"}},l=[{value:"Unmatched subjects",id:"unmatched-subjects",children:[]},{value:"Invalid",id:"invalid",children:[]},{value:"Performance",id:"performance",children:[]}],s={toc:l};function m(e){var t=e.components,n=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Sometimes, you might stumble upon a situation where an amount of occurrences is needed, but not the occurrences\nthemselves. In that case, ",(0,o.kt)("inlineCode",{parentName:"p"},"pattern()->count()")," is perfect:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"return pattern('[aeiouy]')->count('Computer');\n")),(0,o.kt)(c.x,{mdxType:"Result"},"3"),(0,o.kt)("p",null,"Also, ",(0,o.kt)("inlineCode",{parentName:"p"},"MatchPattern")," is ",(0,o.kt)("a",{parentName:"p",href:"https://www.php.net/manual/en/class.countable.php"},(0,o.kt)("inlineCode",{parentName:"a"},"\\Countable")),", so you can use PHP build-in methods, like ",(0,o.kt)("inlineCode",{parentName:"p"},"count()"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"$match = pattern('[aeiouy]')->match('Computer');\n\ncount($match);\n")),(0,o.kt)(c.x,{mdxType:"Result"},"3"),(0,o.kt)("h2",{id:"unmatched-subjects"},"Unmatched subjects"),(0,o.kt)("p",null,"If your pattern does not match the subject, ",(0,o.kt)("inlineCode",{parentName:"p"},"count()")," simply returns ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"return pattern('[0-9]')->count('Computer');\n")),(0,o.kt)(c.x,{mdxType:"Result"},"0"),(0,o.kt)("h2",{id:"invalid"},"Invalid"),(0,o.kt)("p",null,"Every use of ",(0,o.kt)("inlineCode",{parentName:"p"},"pattern()")," with an invalid pattern will cause ",(0,o.kt)("inlineCode",{parentName:"p"},"MalformedPatternException"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"try {\n    pattern('[aeiouy')->count('Computer');  // malformed pattern\n}\ncatch (MalformedPatternException $ex) {\n    echo $ex->getMessage();\n}\n")),(0,o.kt)(c.x,{text:!0,mdxType:"Result"},"Missing terminating ] for character class at offset 7"),(0,o.kt)("h2",{id:"performance"},"Performance"),(0,o.kt)("p",null,"You might be tempted to use ",(0,o.kt)("inlineCode",{parentName:"p"},"count()")," to check whether your subject was matched by the pattern, since ",(0,o.kt)("inlineCode",{parentName:"p"},"count()")," doesn't\nreturn any matches..."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"$count = pattern('[aeiouy]')->count('Computer');\nreturn $count > 0;\n")),(0,o.kt)(c.x,{mdxType:"Result"},"true"),(0,o.kt)("p",null,"...but that would be wasteful. You're much better off using\n",(0,o.kt)("a",{parentName:"p",href:"/docs/match#test-a-subject"},(0,o.kt)("inlineCode",{parentName:"a"},"test()")),"/",(0,o.kt)("a",{parentName:"p",href:"/docs/match#test-a-subject"},(0,o.kt)("inlineCode",{parentName:"a"},"fails()")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"return pattern('[aeiouy]')->test('Computer');\n")),(0,o.kt)(c.x,{mdxType:"Result"},"true"),(0,o.kt)("p",null,"This is because ",(0,o.kt)("inlineCode",{parentName:"p"},"count()")," will go through each occurrence of a pattern in a subject, counting it; whereas ",(0,o.kt)("inlineCode",{parentName:"p"},"test()"),"\nwill return right after it finds the first occurrence."))}m.isMDXComponent=!0}}]);